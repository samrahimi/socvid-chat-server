{"version":3,"sources":["meteor://ðŸ’»app/packages/mizzao:autocomplete/server/index.js","meteor://ðŸ’»app/packages/mizzao:autocomplete/server/autocomplete-server.js"],"names":["module","link","Meteor","v","Mongo","Autocomplete","publishCursor","cursor","sub","Collection","_publishCursor","publish","selector","options","collName","collection","global","Error","_isInsecure","_debug","limit","Math","min","abs","find","ready"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,IAAP,CAAY,uBAAZ,E;;;;;;;;;;;ACAA,IAAIC,MAAJ;AAAWF,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACC,QAAM,CAACC,CAAD,EAAG;AAACD,UAAM,GAACC,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIC,KAAJ;AAAUJ,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACG,OAAK,CAACD,CAAD,EAAG;AAACC,SAAK,GAACD,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAE1E;AACA;AACA,MAAME,YAAY,GAAG,MAAM;AAC1BC,eAAa,CAACC,MAAD,EAASC,GAAT,EAAc;AAC1BJ,SAAK,CAACK,UAAN,CAAiBC,cAAjB,CAAgCH,MAAhC,EAAwCC,GAAxC,EAA6C,qBAA7C;AACA;;AAHyB,CAA3B;AAMAN,MAAM,CAACS,OAAP,CAAe,wBAAf,EAAyC,UAASC,QAAT,EAAmBC,OAAnB,EAA4BC,QAA5B,EAAsC;AAC9E,QAAMC,UAAU,GAAGC,MAAM,CAACF,QAAD,CAAzB,CAD8E,CAG9E;AACA;;AACA,MAAI,CAACC,UAAL,EAAiB;AAChB,UAAM,IAAIE,KAAJ,CAAW,GAAGH,QAAU,wDAAxB,CAAN;AACA;;AACD,MAAI,CAACC,UAAU,CAACG,WAAX,EAAL,EAA+B;AAC9BhB,UAAM,CAACiB,MAAP,CAAe,GAAGL,QAAU,sNAA5B;;AACA,WAAO,EAAP,CAF8B,CAEnB;AACX;;AACD,MAAID,OAAO,CAACO,KAAZ,EAAmB;AAClB;AACAP,WAAO,CAACO,KAAR,GAAgBC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaD,IAAI,CAACE,GAAL,CAASV,OAAO,CAACO,KAAjB,CAAb,CAAhB;AACA,GAf6E,CAiB9E;AACA;;;AACAf,cAAY,CAACC,aAAb,CAA2BS,UAAU,CAACS,IAAX,CAAgBZ,QAAhB,EAA0BC,OAA1B,CAA3B,EAA+D,IAA/D,EAnB8E,CAoB9E;;AACA,OAAKY,KAAL;AACA,CAtBD,E","file":"/packages/mizzao_autocomplete.js","sourcesContent":["import './autocomplete-server';\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\n// This also attaches an onStop callback to sub, so we don't need to worry about that.\n// https://github.com/meteor/meteor/blob/devel/packages/mongo/collection.js\nconst Autocomplete = class {\n\tpublishCursor(cursor, sub) {\n\t\tMongo.Collection._publishCursor(cursor, sub, 'autocompleteRecords');\n\t}\n};\n\nMeteor.publish('autocomplete-recordset', function(selector, options, collName) {\n\tconst collection = global[collName];\n\n\t// This is a semi-documented Meteor feature:\n\t// https://github.com/meteor/meteor/blob/devel/packages/mongo-livedata/collection.js\n\tif (!collection) {\n\t\tthrow new Error(`${ collName } is not defined on the global namespace of the server.`);\n\t}\n\tif (!collection._isInsecure()) {\n\t\tMeteor._debug(`${ collName } is a secure collection, therefore no data was returned because the client could compromise security by subscribing to arbitrary server collections via the browser console. Please write your own publish function.`);\n\t\treturn []; // We need this for the subscription to be marked ready\n\t}\n\tif (options.limit) {\n\t\t// guard against client-side DOS: hard limit to 50\n\t\toptions.limit = Math.min(50, Math.abs(options.limit));\n\t}\n\n\t// Push this into our own collection on the client so they don't interfere with other publications of the named collection.\n\t// This also stops the observer automatically when the subscription is stopped.\n\tAutocomplete.publishCursor(collection.find(selector, options), this);\n\t// Mark the subscription ready after the initial addition of documents.\n\tthis.ready();\n});\n"]}